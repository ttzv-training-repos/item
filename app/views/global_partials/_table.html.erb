<!-- Local Variables:
    id - table id, required
    headers - array of headers, also defines number of columns in table, required
    content - collection of content that should be rendered in table, required
    hidden - array of headers that should be present in table but hidden, optional
    idKey - specifies key (that should be unique) which will be sent to backend to identify selected rows, if not specified first column will be treated as idKey, optional
    postPath - specify post path for AJAX post request, if not specified buttons for sending request wont be added, optional 
    classes - specify styling classes for this DataTable, optional
    -->
<% classes = "" if local_assigns[:classes].nil? %>

<table id=<%=id%> class="<%=classes%>">
    <%unless headers.empty?%>
        <thead>
            <tr>
                <% headers.each do |k, v| %>
                <th><%= v %></th>
                <% end %>
            </tr>
        </thead>
        <tbody>
            <% unless content.empty? or content[0].nil? %>
                <% content.each do |content_row| %>
                <tr>
                    <% headers.each_key do |k| %>
                        <td><%= content_row[k] %></td>
                    <% end %>  
                </tr>
                <% end %>    
            <% end %>    
        </tbody>
    <% end %>
</table>
<% unless local_assigns[:postPath].nil? %>
    <%select_path = postPath + "/select"%>
    <%clear_path = postPath + "/clear"%>
    <%btn_select_id = id + "-select"%>
    <%btn_clear_id = id + "-clear"%>
    <button id="<%=btn_select_id%>">Select</button>
    <button id="<%=btn_clear_id%>">Clear</button>
<% end %>
<%= javascript_include_tag 'user_holder' %>
<script>
    function columnsToHide(){
        let colsToHide = []
        <% unless local_assigns[:hidden].nil? %>
            colsToHide = <%= hidden.collect { |h| headers.keys.index(h) } %>
        <% end %>
        return colsToHide
    }
    
    var dataTable;
    $(document).ready( function () {
       dataTable = $( "#<%=id%>" ).DataTable({
           "columnDefs": [
               {
                   "targets": columnsToHide(),
                   "visible": false,
                   "searchable": true
               }
           ]
       });
    });

    $( "#<%=id%>" ).on( 'click', 'tr', function () {
        $(this).toggleClass('selected');
    });
    
    if ("<%= btn_select_id %>".length !== 0){
        $("#<%=btn_select_id%>").click( function () {
            let data = dataTable.rows('.selected').data()
            console.log(data);
            let id_index = 0;
            <% unless local_assigns[:idKey].nil? %>
                id_index = <%= headers.keys.index(idKey) %>
            <% end %>
            let ids = [];
            dataTable.rows('.selected').data().map( d => {
            ids.push(d[id_index]);
            })
            console.log(ids)
            if (ids.length > 0){
                console.log({data: ids});
                $.post("<%=select_path%>", {users: ids}, function (data) {
                },
                "json");
            } else {
                alert("No user selected");
            }
            reloadHolder();
        } );
    }

    if ("<%= btn_clear_id %>".length !== 0 ){
        $("#<%=btn_clear_id%>").click( function () {
            $.post("<%=clear_path%>")
            reloadHolder();
        } );
    }
</script>